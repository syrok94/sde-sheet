//-----------------------------------------------------------------------------------------------------------------
//Brute Force:
//time complexity O(2*(n*m))
//space complexity O(m+n)

class Solution {
public:
    void setZeroes(vector<vector<int>>& matrix) {
        int n=matrix.size();
        int m=matrix[0].size();
        vector<int> row(n,1);
        vector<int> col(m,1);
        
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(matrix[i][j]==0){
                    row[i]=0;
                    col[j]=0;
                }
            }
        }
        
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(row[i]==0 || col[j]==0){
                    matrix[i][j]=0;
                }
            }
        }
        
        
    }
};

//--------------------------------------------------------------------------------------------------------------
//optimal solution
class Solution {
public:
    //time complexity O(2*(n*m))
    //space complexity O(1)
    //idea is to use first row and col as a dummy vector
    void setZeroes(vector<vector<int>>& matrix) {
        int rows=matrix.size(),cols=matrix[0].size();
        int col0=1;
        
        for(int i=0;i<rows;i++){
            if(matrix[i][0]==0) col0=0;
            for(int j=1;j<cols;j++){
                if(matrix[i][j]==0){
                    matrix[i][0]=0;
                    matrix[0][j]=0;
                }
            }
        }
        
        for(int i=rows-1;i>=0;i--){
            for(int j=cols-1;j>=1;j--){
                if(matrix[i][0]==0 || matrix[0][j]==0){
                    matrix[i][j]=0;
                }
            }
            
            if(col0==0) matrix[i][0]=0;
        }
    }
};
